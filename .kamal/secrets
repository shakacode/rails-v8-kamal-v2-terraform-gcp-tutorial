# Use gcloud to read secrets from GCP Secret Manager
# First, load the project_id from Terraform outputs
PROJECT_ID=$(cd ./terraform-gcloud && terraform output -raw project_id)

# Fetch secrets from Google Cloud Secrets Manager using the project ID
# Edit secrets in GCP Secret Manager web UX:
KAMAL_REGISTRY_PASSWORD=$(gcloud secrets versions access latest --secret=KAMAL_REGISTRY_PASSWORD --project="$PROJECT_ID")

DB_PASSWORD=$(gcloud secrets versions access latest --secret=DB_PASSWORD --project="$PROJECT_ID")

SECRET_KEY_BASE=$(gcloud secrets versions access latest --secret=SECRET_KEY_BASE --project="$PROJECT_ID")

# Use this if you want to use Rails credentials
# RAILS_MASTER_KEY=$(gcloud secrets versions access latest --secret=RAILS_MASTER_KEY --project="$PROJECT_ID")

# Possibly useful comments that you can probably ignore are below.
# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Use a GITHUB_TOKEN if private repositories are needed for the image
# GITHUB_TOKEN=$(gh config get -h github.com oauth_token)
# Grab the registry password from ENV
# KAMAL_REGISTRY_PASSWORD=${KAMAL_REGISTRY_PASSWORD}

# Use op to read secrets from 1password directly because using kamal secret commands results in parse errors
# KAMAL_REGISTRY_PASSWORD=$(op read op://kamal-demo/Items/KAMAL_REGISTRY_PASSWORD/password)
# RAILS_MASTER_KEY=$(op read op://kamal-demo/Items/RAILS_MASTER_KEY/password)
